{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HRIDHI SETHI\\\\Documents\\\\exam-alteration-helper\\\\src\\\\Componets\\\\Admin_login_test.js\";\nimport React, { Component } from 'react'; //import { navigate } from 'gatsby'//import * as ROUTES from '../../constants/routes';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n    An account with an E-Mail address to\n    this social account already exists. Try to login from\n    this account instead and associate your social accounts on\n    your personal account page.\n  `;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        navigate(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    const isInvalid = password === '' || email === '';\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        value: password,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGoogle().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {}\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        navigate(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const {\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst SignInForm = withFirebase(SignInFormBase);\n_c = SignInForm;\nconst SignInGoogle = withFirebase(SignInGoogleBase);\n_c2 = SignInGoogle;\nexport default SignInForm;\nexport { SignInGoogle };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInForm\");\n$RefreshReg$(_c2, \"SignInGoogle\");","map":{"version":3,"sources":["C:/Users/HRIDHI SETHI/Documents/exam-alteration-helper/src/Componets/Admin_login_test.js"],"names":["React","Component","INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","navigate","ROUTES","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","user","uid","set","username","displayName","roles","code","SignInForm","withFirebase","SignInGoogle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import { navigate } from 'gatsby'//import * as ROUTES from '../../constants/routes';\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n  };\r\n  \r\n  const ERROR_CODE_ACCOUNT_EXISTS =\r\n    'auth/account-exists-with-different-credential';\r\n  \r\n  const ERROR_MSG_ACCOUNT_EXISTS = `\r\n    An account with an E-Mail address to\r\n    this social account already exists. Try to login from\r\n    this account instead and associate your social accounts on\r\n    your personal account page.\r\n  `;\r\n  \r\n  class SignInFormBase extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = { ...INITIAL_STATE };\r\n    }\r\n  \r\n    onSubmit = event => {\r\n      const { email, password } = this.state;\r\n  \r\n      this.props.firebase\r\n        .doSignInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          this.setState({ ...INITIAL_STATE });\r\n          navigate(ROUTES.HOME);\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error });\r\n        });\r\n  \r\n      event.preventDefault();\r\n    };\r\n  \r\n    onChange = event => {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n  \r\n    render() {\r\n      const { email, password, error } = this.state;\r\n  \r\n      const isInvalid = password === '' || email === '';\r\n  \r\n      return (\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <button disabled={isInvalid} type=\"submit\">\r\n            Sign In\r\n          </button>\r\n  \r\n          {error && <p>{error.message}</p>}\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class SignInGoogleBase extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = { error: null };\r\n    }\r\n  \r\n    onSubmit = event => {\r\n      this.props.firebase\r\n        .doSignInWithGoogle()\r\n        .then(socialAuthUser => {\r\n          // Create a user in your Firebase Realtime Database too\r\n          return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n            username: socialAuthUser.user.displayName,\r\n            email: socialAuthUser.user.email,\r\n            roles: {},\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.setState({ error: null });\r\n          navigate(ROUTES.HOME);\r\n        })\r\n        .catch(error => {\r\n          if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n            error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n          }\r\n  \r\n          this.setState({ error });\r\n        });\r\n  \r\n      event.preventDefault();\r\n    };\r\n  \r\n    render() {\r\n      const { error } = this.state;\r\n  \r\n      return (\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <button type=\"submit\">Sign In with Google</button>\r\n  \r\n          {error && <p>{error.message}</p>}\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  const SignInForm = withFirebase(SignInFormBase);\r\n\r\nconst SignInGoogle = withFirebase(SignInGoogleBase);\r\nexport default SignInForm;\r\n\r\nexport { SignInGoogle};"]},"metadata":{},"sourceType":"module"}